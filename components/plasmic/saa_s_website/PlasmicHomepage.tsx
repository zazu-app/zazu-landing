// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3ANMJmRMrYZuN2eTrhtZhF
// Component: 3YpKB0tAxFh4

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header2 from "../../Header2"; // plasmic-import: abUuZ_OBzqIx/component
import Button2 from "../../Button2"; // plasmic-import: JkYce_MEgSAA/component
import Button from "../../Button"; // plasmic-import: 4uc5kP8l8A4m/component
import CustomButton2 from "../../CustomButton2"; // plasmic-import: 7wO7KzItzftQ/component
import CustomButtonEmpty from "../../CustomButtonEmpty"; // plasmic-import: LcD7bpdcLV-K/component
import Testimonial from "../../Testimonial"; // plasmic-import: 9o321bBee3h5/component
import CtaBlock from "../../CtaBlock"; // plasmic-import: jT_BkuGgyhPS/component
import HeroSection from "../../HeroSection"; // plasmic-import: zInb_6mM-BOd/component
import Footer from "../../Footer"; // plasmic-import: NuqX60hlTorY/component

import { useScreenVariants as useScreenVariantsquHCgLsadSrl } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: quHCgLSADSrl/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 3ANMJmRMrYZuN2eTrhtZhF/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 3YpKB0tAxFh4/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: JYvICnJX2T43/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: _CSr7N7H9_ud/icon
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: twnv70u89XFX/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {
  slot?: React.ReactNode;
};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>("slot");

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  header2?: Flex__<typeof Header2>;
  h1?: Flex__<"h1">;
  section?: Flex__<"section">;
  customButton2?: Flex__<typeof CustomButton2>;
  customButtonEmpty?: Flex__<typeof CustomButtonEmpty>;
  features?: Flex__<"section">;
  container4?: Flex__<"div">;
  outerRow2?: Flex__<"div">;
  row2?: Flex__<"div">;
  container5?: Flex__<"div">;
  outerRow3?: Flex__<"div">;
  row4?: Flex__<"div">;
  container6?: Flex__<"div">;
  outerRow4?: Flex__<"div">;
  row3?: Flex__<"div">;
  testimonials?: Flex__<"section">;
  testimonial?: Flex__<typeof Testimonial>;
  ctaBlock?: Flex__<typeof CtaBlock>;
  foreground?: Flex__<"div">;
  heroSection?: Flex__<typeof HeroSection>;
  footer?: Flex__<typeof Footer>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsquHCgLsadSrl()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__bmlOa)}>
            <Header2
              data-plasmic-name={"header2"}
              data-plasmic-override={overrides.header2}
              className={classNames("__wab_instance", sty.header2)}
            >
              {renderPlasmicSlot({
                defaultContents: (
                  <React.Fragment>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__zRpSf
                      )}
                    >
                      {"Comienza ahora !"}
                    </Button2>
                    <Button
                      className={classNames("__wab_instance", sty.button__jbx9)}
                      shape={"rounded"}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bqI4P
                        )}
                      >
                        {"Get started"}
                      </div>
                    </Button>
                  </React.Fragment>
                ),
                value: args.slot
              })}
            </Header2>
            <div className={classNames(projectcss.all, sty.freeBox__d2Vq)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ecbZi)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kZAj1)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__vxCo1)}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Organiza tus reservas con ZAZU\n"
                        : "Organiza tus reservas con ZAZU\n"}
                    </h1>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rlS8)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gsjLp
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pc6Kd
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rmSx
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___8Jd0D
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vlTdl
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uqY7
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__cUwsf
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oIhrA
                            )}
                          >
                            {"Ofrece un canal de reservas 24/7"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__bikIs
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yxUjx
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lEjRu
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__hO1S
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yRyJq
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lAmQ5
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ikt8H
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__c1VM6
                            )}
                          >
                            {"Simplifica la gesti\u00f3n de tu negocio"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__y0Jw
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lLbv3
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg___0FyJ7
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jd4Me
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___9LqYh
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__z6F75
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__paLeK
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3Qq2J
                            )}
                          >
                            {"Lleva un facil seguimiento de las reservas"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"section"}
                    data-plasmic-name={"section"}
                    data-plasmic-override={overrides.section}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.section)}
                  >
                    <CustomButton2
                      data-plasmic-name={"customButton2"}
                      data-plasmic-override={overrides.customButton2}
                      className={classNames(
                        "__wab_instance",
                        sty.customButton2
                      )}
                    />

                    <CustomButtonEmpty
                      data-plasmic-name={"customButtonEmpty"}
                      data-plasmic-override={overrides.customButtonEmpty}
                      className={classNames(
                        "__wab_instance",
                        sty.customButtonEmpty
                      )}
                    />
                  </Stack__>
                </Stack__>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__xyDxA)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"632px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/saa_s_website/images/frame66Png.png",
                    fullWidth: 1904,
                    fullHeight: 960,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
            </div>
          </div>
          <section
            data-plasmic-name={"features"}
            data-plasmic-override={overrides.features}
            className={classNames(projectcss.all, sty.features)}
          >
            <div
              className={classNames(projectcss.all, sty.column__dpbN)}
              id={"features"}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__niUMg
                )}
              >
                {"Revoluciona tu negocio con ZAZU"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__t1BtK
                )}
              >
                {
                  "Optimiza tus reservas, reduce gastos y consigue clientes m\u00e1s satisfechos.\n\n"
                }
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"container4"}
                data-plasmic-override={overrides.container4}
                hasGap={true}
                className={classNames(projectcss.all, sty.container4)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"outerRow2"}
                  data-plasmic-override={overrides.outerRow2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.outerRow2)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"row2"}
                    data-plasmic-override={overrides.row2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.row2)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column__uw3Mv)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__yiJIb
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xPyEw
                          )}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__grntw
                          )}
                        >
                          {"Sumergete en la eficiencia\n\n"}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qcaOw
                          )}
                        >
                          {
                            "Nuestra aplicaci\u00f3n simplifica todo el proceso de reserva, permiti\u00e9ndote gestionar horarios de clases, reservas y alquiler de equipos sin esfuerzo. Dile adios a llamadas telefonicas y  e-mails,  reduce costos en tareas administrativas y dedica m\u00e1s tiempo a ofrecer experiencias excepcionales para tus clientes."
                          }
                        </div>
                      </Stack__>
                    </Stack__>
                    <div
                      className={classNames(projectcss.all, sty.column__y34PJ)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___9YAu2)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"500px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/saa_s_website/images/captura4Png.png",
                          fullWidth: 1914,
                          fullHeight: 973,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <div
                data-plasmic-name={"container5"}
                data-plasmic-override={overrides.container5}
                className={classNames(projectcss.all, sty.container5)}
              >
                <div
                  data-plasmic-name={"outerRow3"}
                  data-plasmic-override={overrides.outerRow3}
                  className={classNames(projectcss.all, sty.outerRow3)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"row4"}
                    data-plasmic-override={overrides.row4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.row4)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__gvVnu)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__eIza)}
                        displayHeight={"100%"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "100%"
                            : "none"
                        }
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"500px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/saa_s_website/images/aumentapng.png",
                          fullWidth: 1920,
                          fullHeight: 985,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__szShg)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__j8Jkx
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yk2Ab
                          )}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__gcAb
                          )}
                        >
                          {"Incrementa tus ingresos"}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eIGcm
                          )}
                        >
                          {
                            "Con nuestra aplicaci\u00f3n, atraer\u00e1s m\u00e1s clientes al llegar a una audiencia m\u00e1s amplia y ofrecer opciones de reserva online . No m\u00e1s oportunidades perdidas debido a procesos de reserva manuales. Dale la bienvenida a un flujo constante de reservas y crecimiento de ingresos."
                          }
                        </div>
                      </Stack__>
                    </div>
                  </Stack__>
                </div>
              </div>
              <div
                data-plasmic-name={"container6"}
                data-plasmic-override={overrides.container6}
                className={classNames(projectcss.all, sty.container6)}
              >
                <div
                  data-plasmic-name={"outerRow4"}
                  data-plasmic-override={overrides.outerRow4}
                  className={classNames(projectcss.all, sty.outerRow4)}
                >
                  <div
                    data-plasmic-name={"row3"}
                    data-plasmic-override={overrides.row3}
                    className={classNames(projectcss.all, sty.row3)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__oVzAm)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___0DsAz
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___4Ijg
                          )}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___1PzI3
                          )}
                        >
                          {"Potencia la Experiencia de usuario\n"}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kXIiQ
                          )}
                        >
                          {
                            "Ofrece una excelente experiencia de usuario a tus clientes con nuestra interfaz f\u00e1cil de usar. Desde la b\u00fasqueda y reserva sencilla de clases hasta la confirmaci\u00f3n instant\u00e1nea y recordatorios, tus clientes adorar\u00e1n la experiencia sin complicaciones, lo que llevar\u00e1 a una mayor fidelidad y comentarios positivos."
                          }
                        </div>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___9IuF)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__jsiuh)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/saa_s_website/images/group12Png.png",
                          fullWidth: 4375,
                          fullHeight: 2242,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <section
            data-plasmic-name={"testimonials"}
            data-plasmic-override={overrides.testimonials}
            className={classNames(projectcss.all, sty.testimonials)}
            id={"testimonials"}
          >
            <div className={classNames(projectcss.all, sty.column___0UlQz)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___9TG9
                )}
              >
                {"Testimonios"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0NRBz
                )}
              >
                {'"Escucha lo que dicen nuestros clientes satisfechos"'}
              </div>
              <div className={classNames(projectcss.all, sty.columns__viYb)}>
                <div className={classNames(projectcss.all, sty.column__fEga2)}>
                  <Testimonial
                    data-plasmic-name={"testimonial"}
                    data-plasmic-override={overrides.testimonial}
                    className={classNames("__wab_instance", sty.testimonial)}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__uvjvm)}>
                  <div
                    className={classNames(projectcss.all, sty.columns___9KZjb)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___7Psbo)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__oKbF0)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/saa_s_website/images/mepng.png",
                          fullWidth: 140,
                          fullHeight: 140,
                          aspectRatio: undefined
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__uV4YU
                        )}
                      >
                        {"Zulia Maron Duo"}
                      </h5>
                      <div
                        before={""}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3Sf7N
                        )}
                      >
                        {
                          '"La plataforma de ZAZU ha transformado nuestra manera de gestionar las reservas. Ahora podemos ofrecer opciones de reserva online 24/7, lo que ha incrementado significativamente nuestra clientela internacional. \u00a1Estamos encantados con los resultados!"'
                        }
                      </div>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__a2EB4)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__zzDl2)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___8Rs3E)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__iWUnT
                        )}
                      >
                        {"\u201c"}
                      </h2>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qTys4
                        )}
                      >
                        {
                          '"Gracias a ZAZU, hemos optimizado nuestros procesos de reserva, reduciendo costos y errores humanos. Nuestros socios valoran la facilidad para reservar clases y alquilar embarcaciones, lo que ha fortalecido nuestra reputaci\u00f3n como centro de vela l\u00edder en la ciudad."'
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__nb5Gu
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__b0GvD
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___8AZgH)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/saa_s_website/images/thumbAvatar1583758683Jpg.jpg",
                              fullWidth: 160,
                              fullHeight: 160,
                              aspectRatio: undefined
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__zMsXi
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__aEp6H
                            )}
                          >
                            {"Lorem Ipsum"}
                          </h5>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <CtaBlock
            data-plasmic-name={"ctaBlock"}
            data-plasmic-override={overrides.ctaBlock}
            className={classNames("__wab_instance", sty.ctaBlock)}
          />

          <div className={classNames(projectcss.all, sty.freeBox___19QSn)}>
            <div
              className={classNames(projectcss.all, sty.freeBox___8Cxo5)}
              id={"pricing"}
            />

            <Stack__
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__t3DDm)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__xTPau)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___77JR7
                    )}
                  >
                    {"Planes"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4Xo0F
                  )}
                >
                  {"Descubre el plan perfecto para tu negocio"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__rwdNc)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__ejFae)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yxWpH)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cd6Li
                      )}
                    >
                      {"BAsICA"}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__qgTrJ)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__a3Zpq
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__y4WlP
                          )}
                        >
                          {"Gratis"}
                        </div>
                      </div>
                    </Stack__>
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1H5Wa)}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gLq3G)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7S94Q
                      )}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jTjM4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__v1Pma
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ap0Qc
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__vLQo
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bmFj8
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___1YLkq
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__psm3Q
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vAtqp
                            )}
                          >
                            {"Reservas de clases y equipamiento"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__yyxBq
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__o7Otx
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__uajEf
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__m4F3B
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__khsRr
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___3AvcF
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0AFr0
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hAu8W
                            )}
                          >
                            {"Pagos a traves de la plataforma"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__z4Qsu
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___9AEdb
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rjkMq
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__sHxVw
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ck3Ko
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jUxW1
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rYp4A
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lkNiR
                            )}
                          >
                            {"Recordatorios de clases y notificaciones"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__ygkur
                      )}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__aerta)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__uVUl)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2JQj5
                        )}
                      >
                        {"Contactanos ! "}
                      </div>
                    </Button>
                  </Stack__>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___4FtIq)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__pFrb6)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__o4Wk
                      )}
                    >
                      {"Pro"}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__nMuNt)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ecxF
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wb01E
                          )}
                        >
                          {"Cons\u00faltanos"}
                        </div>
                      </div>
                    </Stack__>
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___12YdP)}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yjzP)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ysvCf)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__l9ZCg
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sfxEa
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__g0TZ
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cwo46
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__h7RKd
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___5GS3E
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yFffT
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nl2QH
                            )}
                          >
                            {"Campa\u00f1as de marketing"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lu9Vu
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__kEZhU
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg___4DSp7
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___5IQpZ
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ohr6A
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zPhmd
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___1GNmx
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kf7Ct
                            )}
                          >
                            {"Recomendaciones en base al clima"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hRCiM
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sga4M
                          )}
                        >
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__svByb
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jjqo4
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__oVwA
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hGeG
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lkOd7
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qdBRg
                            )}
                          >
                            {"Integraci\u00f3n con otros sistemas"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___0Je5K
                      )}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__bk035)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__apu5X)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rdtl1
                        )}
                      >
                        {"Contactanos ! "}
                      </div>
                    </Button>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox___1QOb)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__m5F7U)}
                  />
                </div>
              </Stack__>
            </Stack__>
          </div>
          <HeroSection
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames("__wab_instance", sty.heroSection)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </Stack__>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header2",
    "h1",
    "section",
    "customButton2",
    "customButtonEmpty",
    "features",
    "container4",
    "outerRow2",
    "row2",
    "container5",
    "outerRow3",
    "row4",
    "container6",
    "outerRow4",
    "row3",
    "testimonials",
    "testimonial",
    "ctaBlock",
    "foreground",
    "heroSection",
    "footer"
  ],
  header2: ["header2"],
  h1: ["h1"],
  section: ["section", "customButton2", "customButtonEmpty"],
  customButton2: ["customButton2"],
  customButtonEmpty: ["customButtonEmpty"],
  features: [
    "features",
    "container4",
    "outerRow2",
    "row2",
    "container5",
    "outerRow3",
    "row4",
    "container6",
    "outerRow4",
    "row3"
  ],
  container4: ["container4", "outerRow2", "row2"],
  outerRow2: ["outerRow2", "row2"],
  row2: ["row2"],
  container5: ["container5", "outerRow3", "row4"],
  outerRow3: ["outerRow3", "row4"],
  row4: ["row4"],
  container6: ["container6", "outerRow4", "row3"],
  outerRow4: ["outerRow4", "row3"],
  row3: ["row3"],
  testimonials: ["testimonials", "testimonial"],
  testimonial: ["testimonial"],
  ctaBlock: ["ctaBlock"],
  foreground: ["foreground"],
  heroSection: ["heroSection"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header2: typeof Header2;
  h1: "h1";
  section: "section";
  customButton2: typeof CustomButton2;
  customButtonEmpty: typeof CustomButtonEmpty;
  features: "section";
  container4: "div";
  outerRow2: "div";
  row2: "div";
  container5: "div";
  outerRow3: "div";
  row4: "div";
  container6: "div";
  outerRow4: "div";
  row3: "div";
  testimonials: "section";
  testimonial: typeof Testimonial;
  ctaBlock: typeof CtaBlock;
  foreground: "div";
  heroSection: typeof HeroSection;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header2: makeNodeComponent("header2"),
    h1: makeNodeComponent("h1"),
    section: makeNodeComponent("section"),
    customButton2: makeNodeComponent("customButton2"),
    customButtonEmpty: makeNodeComponent("customButtonEmpty"),
    features: makeNodeComponent("features"),
    container4: makeNodeComponent("container4"),
    outerRow2: makeNodeComponent("outerRow2"),
    row2: makeNodeComponent("row2"),
    container5: makeNodeComponent("container5"),
    outerRow3: makeNodeComponent("outerRow3"),
    row4: makeNodeComponent("row4"),
    container6: makeNodeComponent("container6"),
    outerRow4: makeNodeComponent("outerRow4"),
    row3: makeNodeComponent("row3"),
    testimonials: makeNodeComponent("testimonials"),
    testimonial: makeNodeComponent("testimonial"),
    ctaBlock: makeNodeComponent("ctaBlock"),
    foreground: makeNodeComponent("foreground"),
    heroSection: makeNodeComponent("heroSection"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
